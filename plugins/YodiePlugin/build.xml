<project name="YodiePlugin" basedir="." default="jar" xmlns:maven="antlib:org.eclipse.aether.ant">

  <property file="build.properties" />

  <!-- Name of the plugin -->
  <property name="plugin.name" value="YodiePlugin"/>

  <!-- download a copy of aether ant tasks if we don't have them already
         NOTE: at some point switch to using Apache Maven Resolver for this -->
  <get src="http://search.maven.org/remotecontent?filepath=org/eclipse/aether/aether-ant-tasks/1.0.0.v20140518/aether-ant-tasks-1.0.0.v20140518-uber.jar" dest="aether-ant-tasks-uber.jar" verbose="true" skipexisting="true" />
  <fail message="Checksum mismatch for 'aether-ant-tasks-uber.jar'. Please delete it and rerun ant to redownload.">
    <condition>
      <not>
        <checksum file="aether-ant-tasks-uber.jar" algorithm="SHA" property="95dadd03392a75564904da45108cf048abe6e5bb" verifyproperty="checksum.matches" />
      </not>
    </condition>
  </fail>

  <path id="aether-ant-tasks.classpath" path="aether-ant-tasks-uber.jar" />
  <typedef resource="org/eclipse/aether/ant/antlib.xml" uri="antlib:org.eclipse.aether.ant" classpathref="aether-ant-tasks.classpath" />

  <maven:resolve>
    <maven:remoterepo url="http://repo.gate.ac.uk/content/groups/public" releases="false" updates="never" checksums="fail"> 
      <maven:snapshots enabled="true" updates="always" /> 
    </maven:remoterepo>
    <maven:dependencies>
      <maven:dependency groupid="uk.ac.gate" artifactid="gate-core" version="8.6-SNAPSHOT" />
      <maven:dependency groupid="uk.ac.gate.plugins" artifactid="jdbclookup" version="0.3-SNAPSHOT" />
    </maven:dependencies>
    <path refid="gate.classpath" classpath="compile" />
    <path refid="gate.runtime.classpath" classpath="runtime" />
  </maven:resolve>

  <!-- Source directory - contains the Java source files for this plugin -->
  <property name="src.dir" location="src" />

  <!-- directory to contain the compiled classes -->
  <property name="classes.dir" location="classes" />

  <!-- documentation directory -->
  <property name="doc.dir" location="doc" />

  <!-- JavaDoc documentation directory -->
  <property name="javadoc.dir" location="${doc.dir}/javadoc" />

  <!-- lib directory - put any additional JAR files your plugin requires into
       this directory.  You will also need to add them as <JAR> entries in
       creole.xml -->
  <property name="lib.dir" location="lib" />

  <!-- location for the generated JAR file -->
  <property name="jar.location" location="${plugin.name}.jar" />

  <!--====================== Targets ============================-->
  
  <!-- create build directory structure -->
  <target name="prepare">
    <mkdir dir="${classes.dir}" />
  </target>

  <!-- compile the source -->
  <target name="compile" depends="prepare">
    <javac classpathref="gate.classpath"
           srcdir="${src.dir}"
           destdir="${classes.dir}"
           debug="true"
           debuglevel="lines,source"
    	   encoding="UTF-8"
           source="1.6"
           target="1.6">
    	<compilerarg value="-Xmaxwarns" />
    	<compilerarg value="${gate.compile.maxwarnings}" />
    	<compilerarg value="-Xlint:all" />
    </javac>
  </target>

  <!-- copy resources (anything non-.java) from src to classes -->
  <target name="copy.resources" depends="prepare">
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}" excludes="**/*.java" />
    </copy>
  </target>

  <!-- create the JAR file -->
  <target name="jar" depends="compile, copy.resources" >
    <jar destfile="${jar.location}"
         update="false"
         basedir="${classes.dir}" />
  </target>

  <!-- remove the generated .class files -->
  <target name="clean.classes" >
    <delete dir="${classes.dir}" />
  </target>

  <!-- clean resources generated by tests -->
  <target name="clean.tests">
    <delete>
      <fileset dir="." includes="TEST*.xml" />
    </delete>
  </target>

  <!-- Clean up - remove .class and .jar files -->
  <target name="clean" depends="clean.classes, clean.tests" >
    <delete file="${jar.location}" />
  </target>

  <!-- Clean up everything, including Javadoc -->
  <target name="docclean" depends="clean, clean.javadoc" >
  </target>

  <!-- Build JavaDoc documentation -->
  <target name="doc.prepare">
    <mkdir dir="${javadoc.dir}" />
  </target>

  <!-- Clean JavaDoc documentation -->
  <target name="clean.javadoc">
    <delete dir="${javadoc.dir}" />
  </target>

  <target name="javadoc" depends="doc.prepare">
    <javadoc destdir="${javadoc.dir}" packagenames="*"
             classpathref="gate.classpath"
             encoding="UTF-8"
             windowtitle="${plugin.name} JavaDoc"
             source="1.5">
      <sourcepath>
        <pathelement location="${src.dir}" />
      </sourcepath>
      <link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
      <link href="../../../../doc/javadoc/" />
    </javadoc>
  </target>

  <!-- Build everything - the code and JavaDoc -->
  <target name="all" depends="jar, javadoc" />

  <!-- Other targets used by the main GATE build file:
         build: build the plugin - just calls "jar" target
         test : run the unit tests - there aren't any
         distro.prepare: remove intermediate files that shouldn't be in the
                         distribution
  -->
  <target name="build" depends="jar" />
  <target name="test" />
  <target name="distro.prepare" depends="clean.classes, clean.tests" />

</project>
